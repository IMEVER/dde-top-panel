/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -c RegistrarProxy -p registrar_proxy org.valapanel.AppMenu.Registrar.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef REGISTRAR_PROXY_H
#define REGISTRAR_PROXY_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QDBusAbstractInterface>
#include <QDBusPendingReply>

/*
 * Proxy class for interface org.valapanel.AppMenu.Registrar
 */
class RegistrarProxy: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.valapanel.AppMenu.Registrar"; }
    static inline const char *staticServiceName()
    { return "com.canonical.AppMenu.Registrar"; }
    static inline const char *staticPathName()
    { return "/Registrar"; }

public:
    RegistrarProxy(QObject *parent = nullptr);

    ~RegistrarProxy();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> Reference()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("Reference"), argumentList);
    }

    inline QDBusPendingReply<> UnReference()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("UnReference"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace valapanel {
    namespace AppMenu {
      typedef ::RegistrarProxy RegistrarProxy;
    }
  }
}
#endif
